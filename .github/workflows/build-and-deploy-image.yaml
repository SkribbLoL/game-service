name: Build and Deploy with SonarQube

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

env:
  IMG_NAME: veljkoskrbic/skribblol-game-service
  GKE_CLUSTER: skribblol-cluster-gcp
  GKE_ZONE: europe-west4-a
  DEPLOYMENT_NAME: game-service-deployment

jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test   # make sure your test script runs jest with coverage enabled (jest --coverage)

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info


  build-and-deploy:
    name: Build and Deploy Game Service API
    runs-on: ubuntu-latest
    needs: sonarqube
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Get short SHA
        uses: benjlevesque/short-sha@v3.0
        id: short-sha

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: veljkoskrbic
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMG_NAME }}:${{ steps.short-sha.outputs.sha }}
            ${{ env.IMG_NAME }}:latest

      # - name: Authenticate to Google Cloud
      #   uses: google-github-actions/auth@v2
      #   with:
      #     credentials_json: ${{ secrets.GCP_SA_KEY }}

      # - name: Set up Cloud SDK
      #   uses: google-github-actions/setup-gcloud@v2
      #   with:
      #     install_components: 'gke-gcloud-auth-plugin'

      # - name: Get GKE credentials
      #   run: |
      #     gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} \
      #       --zone ${{ env.GKE_ZONE }} \
      #       --project ${{ secrets.GCP_PROJECT_ID }}

      # - name: Deploy to GKE
      #   run: |
      #     if kubectl get deployment ${{ env.DEPLOYMENT_NAME }} > /dev/null 2>&1; then
      #       echo "Updating existing deployment..."
      #       kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} \
      #         game-service=${{ env.IMG_NAME }}:${{ steps.short-sha.outputs.sha }}
      #       kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} --timeout=300s
      #     else
      #       echo "Deployment not found. Skipping..."
      #       exit 1
      #     fi
